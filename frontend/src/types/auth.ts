// ai_context_v3
/**
 * üéØ main_goal: TypeScript —Ç–∏–ø—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * ‚ö° critical_requirements:
 *   - –ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ backend –º–æ–¥–µ–ª—è–º
 *   - –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö auth –æ–ø–µ—Ä–∞—Ü–∏–π
 * üì• inputs_outputs: Backend JSON -> TypeScript types
 * üîß functions_list: –¢–æ–ª—å–∫–æ —Ç–∏–ø—ã –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
 * üö´ forbidden_changes: –ù–µ –∏–∑–º–µ–Ω—è—Ç—å –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å backend
 * üß™ tests: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
 */

export interface User {
  id: string;
  telegram_id?: number;
  username?: string;
  first_name?: string;
  last_name?: string;
  email?: string;
  phone?: string;
  language_code: string;
  timezone: string;
  created_at: string;
  last_active: string;
  is_active: boolean;
  subscription_type: SubscriptionType;
  daily_limit: number;
  dreams_today: number;
}

export type SubscriptionType = 'free' | 'trial' | 'pro' | 'yearly';

export interface AuthTokens {
  access_token: string;
  refresh_token: string;
  token_type: string;
  expires_in: number;
}

export interface TelegramAuthData {
  id: number;
  first_name: string;
  last_name?: string;
  username?: string;
  photo_url?: string;
  auth_date: number;
  hash: string;
}

export interface EmailAuthData {
  email: string;
  password: string;
}

export interface AuthResponse {
  user: User;
  tokens: AuthTokens;
  is_new_user: boolean;
}

export interface RefreshTokenRequest {
  refresh_token: string;
}

export interface RefreshTokenResponse extends AuthTokens {}

// Auth error types
export interface AuthError {
  error: string;
  message: string;
  code: string;
  details?: any;
}

// Auth state for Zustand store
export interface AuthState {
  user: User | null;
  isAuthenticated: boolean;
  isLoading: boolean;
  error: string | null;
}
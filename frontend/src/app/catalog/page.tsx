// ai_context_v3
/**
 * üéØ main_goal: SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Å–∏–º–≤–æ–ª–æ–≤ —Å–Ω–æ–≤
 * ‚ö° critical_requirements:
 *   - –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–∏—Å–∫–æ–º
 *   - SEO-–¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ URL
 *   - –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
 *   - –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è SEO
 * üì• inputs_outputs: Query params -> Filtered symbol list
 * üîß functions_list:
 *   - CatalogPage: –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
 *   - SearchBar: –ü–æ–∏—Å–∫ –ø–æ —Å–∏–º–≤–æ–ª–∞–º
 *   - SymbolGrid: –°–µ—Ç–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
 *   - CategoryFilter: –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 * üö´ forbidden_changes: –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å client-side —Ç–æ–ª—å–∫–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
 * üß™ tests: SEO meta tags, pagination
 */

'use client';

import { useState, useEffect, useCallback, Suspense } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import Link from 'next/link';
import Header from '@/components/layout/Header';
import { Button } from '@/components/ui/Button';
import { Card, CardContent } from '@/components/ui/Card';
import { Input } from '@/components/ui/Input';
import Skeleton, { SkeletonCard } from '@/components/ui/Skeleton';
import { useDreamCatalog } from '@/hooks/useDreams';
import { toast } from '@/components/ui/Toast';

// –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è SEO
const POPULAR_SYMBOLS = [
  { id: 'water', name: '–í–æ–¥–∞', emoji: 'üíß', description: '–≠–º–æ—Ü–∏–∏ –∏ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ', category: 'nature' },
  { id: 'flight', name: '–ü–æ–ª–µ—Ç', emoji: 'ü¶Ö', description: '–°–≤–æ–±–æ–¥–∞ –∏ –∞–º–±–∏—Ü–∏–∏', category: 'actions' },
  { id: 'falling', name: '–ü–∞–¥–µ–Ω–∏–µ', emoji: 'üìâ', description: '–ü–æ—Ç–µ—Ä—è –∫–æ–Ω—Ç—Ä–æ–ª—è', category: 'actions' },
  { id: 'snake', name: '–ó–º–µ—è', emoji: 'üêç', description: '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –º—É–¥—Ä–æ—Å—Ç—å', category: 'animals' },
  { id: 'money', name: '–î–µ–Ω—å–≥–∏', emoji: 'üí∞', description: '–¶–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É—Å–ø–µ—Ö', category: 'objects' },
  { id: 'fire', name: '–û–≥–æ–Ω—å', emoji: 'üî•', description: '–°—Ç—Ä–∞—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è', category: 'nature' },
  { id: 'house', name: '–î–æ–º', emoji: 'üè†', description: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Å–µ–º—å—è', category: 'places' },
  { id: 'sea', name: '–ú–æ—Ä–µ', emoji: 'üåä', description: '–ë–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–µ', category: 'nature' },
  { id: 'death', name: '–°–º–µ—Ä—Ç—å', emoji: 'üíÄ', description: '–ö–æ–Ω–µ—Ü –∏ –Ω–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ', category: 'concepts' },
  { id: 'pregnancy', name: '–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å', emoji: 'ü§∞', description: '–ù–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è', category: 'concepts' },
  { id: 'wedding', name: '–°–≤–∞–¥—å–±–∞', emoji: 'üíí', description: '–°–æ—é–∑ –∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞', category: 'events' },
  { id: 'teeth', name: '–ó—É–±—ã', emoji: 'ü¶∑', description: '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–∏–ª–∞', category: 'body' },
  { id: 'car', name: '–ú–∞—à–∏–Ω–∞', emoji: 'üöó', description: '–ö–æ–Ω—Ç—Ä–æ–ª—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', category: 'objects' },
  { id: 'dog', name: '–°–æ–±–∞–∫–∞', emoji: 'üêï', description: '–í–µ—Ä–Ω–æ—Å—Ç—å –∏ –¥—Ä—É–∂–±–∞', category: 'animals' },
  { id: 'cat', name: '–ö–æ—à–∫–∞', emoji: 'üêà', description: '–ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∏ –∏–Ω—Ç—É–∏—Ü–∏—è', category: 'animals' },
  { id: 'baby', name: '–†–µ–±–µ–Ω–æ–∫', emoji: 'üë∂', description: '–ù–æ–≤–æ–µ –Ω–∞—á–∞–ª–æ –∏ –Ω–µ–≤–∏–Ω–Ω–æ—Å—Ç—å', category: 'people' },
  { id: 'mother', name: '–ú–∞—Ç—å', emoji: 'üë©', description: '–ó–∞–±–æ—Ç–∞ –∏ –∑–∞—â–∏—Ç–∞', category: 'people' },
  { id: 'father', name: '–û—Ç–µ—Ü', emoji: 'üë®', description: '–ê–≤—Ç–æ—Ä–∏—Ç–µ—Ç –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞', category: 'people' },
  { id: 'rain', name: '–î–æ–∂–¥—å', emoji: 'üåßÔ∏è', description: '–û—á–∏—â–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ', category: 'nature' },
  { id: 'sun', name: '–°–æ–ª–Ω—Ü–µ', emoji: '‚òÄÔ∏è', description: '–ñ–∏–∑–Ω–µ–Ω–Ω–∞—è —Å–∏–ª–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–º', category: 'nature' },
];

const CATEGORIES = [
  { id: 'all', name: '–í—Å–µ', icon: '‚ú®' },
  { id: 'nature', name: '–ü—Ä–∏—Ä–æ–¥–∞', icon: 'üåø' },
  { id: 'animals', name: '–ñ–∏–≤–æ—Ç–Ω—ã–µ', icon: 'ü¶Å' },
  { id: 'people', name: '–õ—é–¥–∏', icon: 'üë•' },
  { id: 'objects', name: '–ü—Ä–µ–¥–º–µ—Ç—ã', icon: 'üéØ' },
  { id: 'places', name: '–ú–µ—Å—Ç–∞', icon: 'üèõÔ∏è' },
  { id: 'actions', name: '–î–µ–π—Å—Ç–≤–∏—è', icon: 'üèÉ' },
  { id: 'concepts', name: '–ö–æ–Ω—Ü–µ–ø—Ü–∏–∏', icon: 'üí≠' },
  { id: 'events', name: '–°–æ–±—ã—Ç–∏—è', icon: 'üéâ' },
  { id: 'body', name: '–¢–µ–ª–æ', icon: 'üë§' },
];

function CatalogContent() {
  const router = useRouter();
  const searchParams = useSearchParams();
  
  const [searchQuery, setSearchQuery] = useState(searchParams.get('q') || '');
  const [selectedCategory, setSelectedCategory] = useState(searchParams.get('category') || 'all');
  const [currentPage, setCurrentPage] = useState(parseInt(searchParams.get('page') || '1'));
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∏–∑ API
  const { data: catalogData, isLoading } = useDreamCatalog({
    query: searchQuery,
    category: selectedCategory,
    page: currentPage,
    limit: 20,
  });

  // –î–ª—è –¥–µ–º–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const symbols = POPULAR_SYMBOLS;
  const totalPages = 1;

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤
  const filteredSymbols = symbols.filter(symbol => {
    const matchesSearch = symbol.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         symbol.description.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesCategory = selectedCategory === 'all' || symbol.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ URL –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  useEffect(() => {
    const params = new URLSearchParams();
    if (searchQuery) params.set('q', searchQuery);
    if (selectedCategory !== 'all') params.set('category', selectedCategory);
    if (currentPage > 1) params.set('page', currentPage.toString());
    
    const newUrl = params.toString() ? `/catalog?${params.toString()}` : '/catalog';
    router.replace(newUrl, { scroll: false });
  }, [searchQuery, selectedCategory, currentPage, router]);

  const handleSymbolClick = (symbolId: string) => {
    router.push(`/catalog/${symbolId}`);
  };

  const handleSearch = useCallback((value: string) => {
    setSearchQuery(value);
    setCurrentPage(1);
  }, []);

  return (
    <div className="min-h-screen">
      <Header />
      
      {/* Hero Section */}
      <section className="relative pt-24 pb-12 overflow-hidden">
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <div className="absolute top-0 right-0 w-96 h-96 bg-primary-500/10 rounded-full blur-3xl animate-float" />
          <div className="absolute bottom-0 left-0 w-80 h-80 bg-accent-500/10 rounded-full blur-3xl animate-float" style={{ animationDelay: '3s' }} />
        </div>
        
        <div className="container relative mx-auto px-4">
          <div className="text-center mb-12">
            <h1 className="text-5xl md:text-6xl font-bold text-white font-display mb-4 animate-fade-in">
              <span className="text-gradient">–ö–∞—Ç–∞–ª–æ–≥ —Å–∏–º–≤–æ–ª–æ–≤ —Å–Ω–æ–≤</span>
            </h1>
            <p className="text-xl text-mystic-text-secondary animate-slide-up">
              –ò—Å—Å–ª–µ–¥—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –∏—Ö —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è
            </p>
          </div>

          {/* Search Bar */}
          <div className="max-w-2xl mx-auto mb-8 animate-scale-in" style={{ animationDelay: '0.2s' }}>
            <Input
              type="search"
              placeholder="–ü–æ–∏—Å–∫ —Å–∏–º–≤–æ–ª–æ–≤..."
              value={searchQuery}
              onChange={(e) => handleSearch(e.target.value)}
              className="h-14 text-lg"
              icon={
                <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              }
            />
          </div>

          {/* Categories */}
          <div className="flex flex-wrap justify-center gap-3 animate-fade-in" style={{ animationDelay: '0.3s' }}>
            {CATEGORIES.map((category) => (
              <Button
                key={category.id}
                variant={selectedCategory === category.id ? 'primary' : 'secondary'}
                size="sm"
                onClick={() => {
                  setSelectedCategory(category.id);
                  setCurrentPage(1);
                }}
              >
                <span className="mr-2">{category.icon}</span>
                {category.name}
              </Button>
            ))}
          </div>
        </div>
      </section>

      {/* Symbols Grid */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          {isLoading ? (
            <div className="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
              {[...Array(8)].map((_, i) => (
                <SkeletonCard key={i} />
              ))}
            </div>
          ) : filteredSymbols.length > 0 ? (
            <>
              <div className="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
                {filteredSymbols.map((symbol, index) => (
                  <Link
                    key={symbol.id}
                    href={`/catalog/${symbol.id}`}
                    className="group animate-scale-in"
                    style={{ animationDelay: `${index * 0.05}s` }}
                  >
                    <Card variant="glass" interactive className="h-full">
                      <CardContent className="text-center pt-8 pb-6">
                        <div className="text-6xl mb-4 group-hover:scale-110 transition-transform duration-300">
                          {symbol.emoji}
                        </div>
                        <h2 className="text-xl font-semibold text-white mb-2 group-hover:text-primary-400 transition-colors">
                          {symbol.name}
                        </h2>
                        <p className="text-sm text-mystic-text-muted">
                          {symbol.description}
                        </p>
                        <div className="mt-4 opacity-0 group-hover:opacity-100 transition-opacity">
                          <span className="text-xs text-primary-400">–£–∑–Ω–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ ‚Üí</span>
                        </div>
                      </CardContent>
                    </Card>
                  </Link>
                ))}
              </div>

              {/* Pagination */}
              {totalPages > 1 && (
                <div className="flex justify-center gap-2 mt-12">
                  <Button
                    variant="secondary"
                    size="sm"
                    onClick={() => setCurrentPage(p => Math.max(1, p - 1))}
                    disabled={currentPage === 1}
                  >
                    ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è
                  </Button>
                  
                  <div className="flex items-center gap-2">
                    {[...Array(Math.min(5, totalPages))].map((_, i) => {
                      const pageNum = i + 1;
                      return (
                        <Button
                          key={pageNum}
                          variant={currentPage === pageNum ? 'primary' : 'ghost'}
                          size="sm"
                          onClick={() => setCurrentPage(pageNum)}
                        >
                          {pageNum}
                        </Button>
                      );
                    })}
                    {totalPages > 5 && <span className="text-mystic-text-muted">...</span>}
                  </div>
                  
                  <Button
                    variant="secondary"
                    size="sm"
                    onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}
                    disabled={currentPage === totalPages}
                  >
                    –°–ª–µ–¥—É—é—â–∞—è ‚Üí
                  </Button>
                </div>
              )}
            </>
          ) : (
            <Card variant="glass" className="text-center py-16">
              <CardContent>
                <div className="text-6xl mb-4">üîç</div>
                <h3 className="text-xl font-semibold text-white mb-2">
                  –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                </h3>
                <p className="text-mystic-text-muted mb-6">
                  –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
                </p>
                <Button
                  variant="primary"
                  onClick={() => {
                    setSearchQuery('');
                    setSelectedCategory('all');
                  }}
                >
                  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </Button>
              </CardContent>
            </Card>
          )}
        </div>
      </section>

      {/* SEO Content */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <Card variant="gradient" className="p-8">
            <h2 className="text-3xl font-bold text-white mb-4 font-display">
              –û —Å–æ–Ω–Ω–∏–∫–µ —Å–∏–º–≤–æ–ª–æ–≤
            </h2>
            <div className="prose prose-invert max-w-none">
              <p className="text-mystic-text-secondary mb-4">
                –ù–∞—à –∫–∞—Ç–∞–ª–æ–≥ —Å–∏–º–≤–æ–ª–æ–≤ —Å–Ω–æ–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å–∞–º—ã—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö 
                –æ–±—Ä–∞–∑–æ–≤, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –≤ —Å–Ω–æ–≤–∏–¥–µ–Ω–∏—è—Ö. –ö–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é 
                –º–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤, —É—á–∏—Ç—ã–≤–∞—é—â–∏—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ, –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ 
                –º–∏—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã.
              </p>
              <p className="text-mystic-text-secondary">
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Å–∏–º–≤–æ–ª, –∏–ª–∏ 
                –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ —Å–Ω–æ–≤ ‚Äî 
                —ç—Ç–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∏ –Ω–∞—à–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–ª—É–∂–∞—Ç –æ—Ç–ø—Ä–∞–≤–Ω–æ–π —Ç–æ—á–∫–æ–π 
                –¥–ª—è –≤–∞—à–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è.
              </p>
            </div>
          </Card>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <Card variant="glass" glow className="text-center p-8">
            <h2 className="text-3xl font-bold text-white mb-4 font-display">
              –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–Ω?
            </h2>
            <p className="text-lg text-mystic-text-secondary mb-6">
              –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ –∑–∞ 30 —Å–µ–∫—É–Ω–¥
            </p>
            <Button variant="gradient" size="lg" asChild>
              <Link href="/">–†–∞–∑–≥–∞–¥–∞—Ç—å —Å–æ–Ω</Link>
            </Button>
          </Card>
        </div>
      </section>
    </div>
  );
}

export default function CatalogPage() {
  return (
    <Suspense fallback={
      <div className="min-h-screen">
        <Header />
        <div className="container mx-auto px-4 pt-24">
          <div className="space-y-6">
            {[...Array(8)].map((_, i) => (
              <SkeletonCard key={i} />
            ))}
          </div>
        </div>
      </div>
    }>
      <CatalogContent />
    </Suspense>
  );
}
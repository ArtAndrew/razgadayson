// ai_context_v3
/**
 * üéØ main_goal: –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å–Ω–∞
 * ‚ö° critical_requirements:
 *   - –ü–æ–∫–∞–∑ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Å —Å–∏–º–≤–æ–ª–∞–º–∏ –∏ —ç–º–æ—Ü–∏—è–º–∏
 *   - –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —à–∞—Ä–∏–Ω–≥–∞
 *   - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è TTS –¥–ª—è Pro –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * üì• inputs_outputs: Dream ID -> Interpretation display
 * üîß functions_list:
 *   - DreamResultPage: –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 *   - showInterpretation: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
 *   - handleTTS: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–∫–∏
 * üö´ forbidden_changes: –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å Pro —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
 * üß™ tests: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */

'use client';

import { useEffect, useState } from 'react';
import { useParams, useRouter } from 'next/navigation';
import Link from 'next/link';
import { useDream, useGenerateTTS } from '@/hooks/useDreams';
import { useAuth } from '@/hooks/useAuth';
import type { DreamInterpretResponse } from '@/types/dream';

export default function DreamResultPage() {
  const params = useParams();
  const router = useRouter();
  const dreamId = params.id as string;
  
  const { user } = useAuth();
  const { data: dream, isLoading, error } = useDream(dreamId);
  const generateTTS = useGenerateTTS();
  
  const [sessionInterpretation, setSessionInterpretation] = useState<DreamInterpretResponse | null>(null);
  const [audioUrl, setAudioUrl] = useState<string | null>(null);
  const [isPlaying, setIsPlaying] = useState(false);

  // Load interpretation from session storage if available
  useEffect(() => {
    const stored = sessionStorage.getItem('lastInterpretation');
    if (stored) {
      try {
        const data = JSON.parse(stored);
        if (data.dream_id === dreamId) {
          setSessionInterpretation(data);
        }
      } catch {
        // Ignore parse errors
      }
      sessionStorage.removeItem('lastInterpretation');
    }
  }, [dreamId]);

  const interpretation = dream?.interpretation || sessionInterpretation?.interpretation;
  const similarDreams = sessionInterpretation?.similar_dreams || [];

  const handleShare = async () => {
    const shareData = {
      title: `–ú–æ–π —Å–æ–Ω: ${interpretation?.main_symbol}`,
      text: `–Ø –≤–∏–¥–µ–ª —Å–æ–Ω –ø—Ä–æ ${interpretation?.main_symbol}. –£–∑–Ω–∞–π, —á—Ç–æ –æ–∑–Ω–∞—á–∞—é—Ç —Ç–≤–æ–∏ —Å–Ω—ã!`,
      url: window.location.href,
    };

    try {
      if (navigator.share) {
        await navigator.share(shareData);
      } else {
        // Fallback - copy to clipboard
        await navigator.clipboard.writeText(shareData.url);
        alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
      }
    } catch (error) {
      console.error('Error sharing:', error);
    }
  };

  const handleGenerateTTS = async () => {
    if (!user || user.subscription_type === 'free') {
      alert('–û–∑–≤—É—á–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è Pro –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      router.push('/subscribe');
      return;
    }

    try {
      const result = await generateTTS.mutateAsync({ 
        dreamId, 
        voice: 'nova' 
      });
      
      // Create audio URL from base64
      const blob = new Blob(
        [Uint8Array.from(atob(result.audio), c => c.charCodeAt(0))],
        { type: 'audio/mp3' }
      );
      const url = URL.createObjectURL(blob);
      setAudioUrl(url);
      
      // Auto-play
      const audio = new Audio(url);
      audio.play();
      setIsPlaying(true);
      
      audio.onended = () => setIsPlaying(false);
    } catch (error: any) {
      alert(error.message || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–∑–≤—É—á–∫–∏');
    }
  };

  if (isLoading) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="text-center">
          <div className="mb-4 h-16 w-16 animate-spin rounded-full border-4 border-purple-600 border-t-transparent"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é...</p>
        </div>
      </div>
    );
  }

  if (error || (!dream && !sessionInterpretation)) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="text-center">
          <h1 className="mb-4 text-2xl font-bold text-gray-900">–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
          <p className="mb-6 text-gray-600">–í–æ–∑–º–æ–∂–Ω–æ, —Å—Å—ã–ª–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞ –∏–ª–∏ —Å–æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω</p>
          <Link
            href="/"
            className="rounded-lg bg-purple-600 px-6 py-3 text-white hover:bg-purple-700"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen py-10">
      <div className="container mx-auto max-w-4xl px-4">
        {/* Header */}
        <div className="mb-8 text-center">
          <Link href="/" className="text-purple-600 hover:text-purple-700">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>

        {/* Main Symbol Card */}
        <div className="mb-8 rounded-2xl bg-gradient-to-br from-purple-600 to-pink-600 p-8 text-center text-white shadow-xl">
          <div className="mb-4 text-6xl">{interpretation?.main_symbol_emoji}</div>
          <h1 className="mb-2 text-3xl font-bold">{interpretation?.main_symbol}</h1>
          <p className="text-lg opacity-90">–ì–ª–∞–≤–Ω—ã–π —Å–∏–º–≤–æ–ª –≤–∞—à–µ–≥–æ —Å–Ω–∞</p>
        </div>

        {/* Interpretation */}
        <div className="mb-8 rounded-lg bg-white p-6 shadow-lg">
          <h2 className="mb-4 text-2xl font-bold">–¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ</h2>
          <p className="whitespace-pre-wrap text-gray-700">{interpretation?.interpretation}</p>
        </div>

        {/* Emotions */}
        {interpretation?.emotions && interpretation.emotions.length > 0 && (
          <div className="mb-8 rounded-lg bg-white p-6 shadow-lg">
            <h2 className="mb-4 text-2xl font-bold">–≠–º–æ—Ü–∏–∏ –≤–æ —Å–Ω–µ</h2>
            <div className="space-y-3">
              {interpretation.emotions.map((emotion, index) => (
                <div key={index} className="border-l-4 border-purple-500 bg-gray-50 p-4">
                  <div className="mb-1 flex items-center justify-between">
                    <h3 className="font-semibold">{emotion.name}</h3>
                    <span className={`rounded-full px-3 py-1 text-sm ${
                      emotion.intensity === '–≤—ã—Å–æ–∫–∞—è' ? 'bg-red-100 text-red-700' :
                      emotion.intensity === '—Å—Ä–µ–¥–Ω—è—è' ? 'bg-yellow-100 text-yellow-700' :
                      'bg-green-100 text-green-700'
                    }`}>
                      {emotion.intensity}
                    </span>
                  </div>
                  <p className="text-gray-600">{emotion.meaning}</p>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Advice */}
        {interpretation?.advice && (
          <div className="mb-8 rounded-lg bg-gradient-to-r from-purple-50 to-pink-50 p-6 shadow-lg">
            <h2 className="mb-4 text-2xl font-bold">–°–æ–≤–µ—Ç</h2>
            <p className="text-gray-700">{interpretation.advice}</p>
          </div>
        )}

        {/* Similar Dreams */}
        {similarDreams.length > 0 && (
          <div className="mb-8 rounded-lg bg-white p-6 shadow-lg">
            <h2 className="mb-4 text-2xl font-bold">–ü–æ—Ö–æ–∂–∏–µ —Å–Ω—ã</h2>
            <div className="space-y-3">
              {similarDreams.map((similar) => (
                <Link
                  key={similar.id}
                  href={`/dream/${similar.id}`}
                  className="block rounded-lg border border-gray-200 p-4 hover:border-purple-300 hover:bg-purple-50"
                >
                  <div className="mb-2 flex items-center justify-between">
                    <span className="font-semibold">{similar.main_symbol}</span>
                    <span className="text-sm text-gray-500">
                      –°—Ö–æ–¥—Å—Ç–≤–æ: {Math.round(similar.similarity * 100)}%
                    </span>
                  </div>
                  <p className="text-sm text-gray-600">{similar.text}</p>
                </Link>
              ))}
            </div>
          </div>
        )}

        {/* Actions */}
        <div className="flex flex-wrap gap-4">
          <button
            onClick={handleShare}
            className="flex-1 rounded-lg border border-purple-600 bg-white px-6 py-3 font-semibold text-purple-600 hover:bg-purple-50 sm:flex-none"
          >
            –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
          </button>
          
          <button
            onClick={handleGenerateTTS}
            disabled={generateTTS.isPending || isPlaying}
            className="flex-1 rounded-lg bg-purple-600 px-6 py-3 font-semibold text-white hover:bg-purple-700 disabled:opacity-50 sm:flex-none"
          >
            {generateTTS.isPending ? '–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : 
             isPlaying ? '–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è...' : 
             'üîä –û–∑–≤—É—á–∏—Ç—å'}
          </button>

          {user ? (
            <Link
              href="/profile/dreams"
              className="flex-1 rounded-lg bg-gray-600 px-6 py-3 text-center font-semibold text-white hover:bg-gray-700 sm:flex-none"
            >
              –ú–æ–∏ —Å–Ω—ã
            </Link>
          ) : (
            <Link
              href="/login"
              className="flex-1 rounded-lg bg-gray-600 px-6 py-3 text-center font-semibold text-white hover:bg-gray-700 sm:flex-none"
            >
              –í–æ–π—Ç–∏
            </Link>
          )}
        </div>

        {/* Pro Features Hint */}
        {(!user || user.subscription_type === 'free') && (
          <div className="mt-8 rounded-lg bg-purple-50 p-6 text-center">
            <h3 className="mb-2 text-lg font-semibold">–û—Ç–∫—Ä–æ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å Pro</h3>
            <p className="mb-4 text-gray-600">
              –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è, –æ–∑–≤—É—á–∫–∞, –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ
            </p>
            <Link
              href="/subscribe"
              className="inline-block rounded-lg bg-purple-600 px-6 py-2 text-white hover:bg-purple-700"
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å Pro –±–µ—Å–ø–ª–∞—Ç–Ω–æ
            </Link>
          </div>
        )}

        {/* Footer Info */}
        <div className="mt-12 text-center text-sm text-gray-500">
          <p>AI –º–æ–¥–µ–ª—å: {interpretation?.ai_model}</p>
          <p>–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {interpretation?.processing_time_ms}–º—Å</p>
        </div>
      </div>
    </div>
  );
}
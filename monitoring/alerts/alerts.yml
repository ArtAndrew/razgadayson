groups:
  - name: razgazdayson_alerts
    interval: 30s
    rules:
      # Instance down
      - alert: InstanceDown
        expr: up == 0
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Instance {{ $labels.instance }} down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."

      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is above 80% (current value: {{ $value }}%)"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 90
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is above 90% (current value: {{ $value }}%)"

      # Disk space low
      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100 < 10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Low disk space on {{ $labels.instance }}"
          description: "Disk space is below 10% (current value: {{ $value }}%)"

      # API high response time
      - alert: APIHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is above 2 seconds (current value: {{ $value }}s)"

      # API error rate high
      - alert: APIErrorRateHigh
        expr: sum(rate(http_requests_total{status=~"5.."}[5m])) / sum(rate(http_requests_total[5m])) > 0.05
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High API error rate"
          description: "Error rate is above 5% (current value: {{ $value }}%)"

      # Database connection pool exhausted
      - alert: DatabaseConnectionPoolExhausted
        expr: sqlalchemy_pool_connections_used / sqlalchemy_pool_connections_total > 0.9
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Database connection pool nearly exhausted"
          description: "Connection pool usage is above 90% (current value: {{ $value }}%)"

      # Redis memory usage high
      - alert: RedisMemoryUsageHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Redis memory usage high"
          description: "Redis memory usage is above 90% (current value: {{ $value }}%)"

      # Telegram bot webhook failures
      - alert: TelegramWebhookFailures
        expr: rate(telegram_webhook_failures_total[5m]) > 1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Telegram webhook failures detected"
          description: "Webhook failures rate: {{ $value }} per second"

      # Free user rate limit exceeded
      - alert: FreeUserRateLimitExceeded
        expr: rate(rate_limit_exceeded_total{user_type="free"}[5m]) > 10
        for: 5m
        labels:
          severity: info
        annotations:
          summary: "Many free users hitting rate limits"
          description: "Rate limit exceeded {{ $value }} times per second for free users"

      # OpenAI API errors
      - alert: OpenAIAPIErrors
        expr: rate(openai_api_errors_total[5m]) > 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "OpenAI API errors detected"
          description: "OpenAI API error rate: {{ $value }} per second"

      # Payment failures
      - alert: PaymentFailures
        expr: rate(payment_failures_total[5m]) > 0.01
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Payment failures detected"
          description: "Payment failure rate: {{ $value }} per second"